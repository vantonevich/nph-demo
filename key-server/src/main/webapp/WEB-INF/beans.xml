<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation=" http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/security  http://www.springframework.org/schema/security/spring-security-3.2.xsd http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	<bean id="propertiesConfiguration"
		class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<array>
				<value>classpath:default.key-server.properties</value>
				<value>file:${key.server.etc:}/key-server.properties</value>
			</array>
		</property>
	</bean>
	<jaxrs:server id="endpoint-server" address="/">
		<jaxrs:serviceBeans>
			<ref bean="key-dispencer" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<bean
				class="com.nextpathway.hadoop.keyserver.service.AccessDeniedExceptionMapper" />
			<bean
				class="com.nextpathway.hadoop.keyserver.service.KeyDispenserExceptionMapper" />
		</jaxrs:providers>
	</jaxrs:server>
	<bean id="key-dispencer"
		class="com.nextpathway.hadoop.keyserver.service.KeyDispenserServiceImpl">
		<constructor-arg index="0"
			value="${com.nextpathway.hadoop.keyserver.service.keystore.location}" />
		<constructor-arg index="1"
			value="${com.nextpathway.hadoop.keyserver.service.key.alias}" />
		<constructor-arg index="2"
			value="${com.nextpathway.hadoop.keyserver.service.keystore.password}" />
		<constructor-arg index="3"
			value="${com.nextpathway.hadoop.keyserver.service.key.password}" />
	</bean>
	<security:http auto-config="true" disable-url-rewriting="true" create-session="never">
		<security:intercept-url pattern="/service/init" access="ROLE_JOB_INITIATOR" />
		<security:intercept-url pattern="/service/acquire" access="ROLE_JOB_RUNNER" />
		<security:http-basic />
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<!--  wget -v localhost:8080/service/init - -header 'Authorization: Basic Ym9iOmJvYg==' - -server-response -->
				<!-- bob:bob Ym9iOmJvYg== -->
				<security:user name="bob" password="bob" 
					authorities="ROLE_JOB_INITIATOR" />
				<!--  wget -v localhost:8080/service/acquire - -header 'Authorization: Basic ZnJlZDpmcmVk' - -server-response -->
				<!-- fred:fred ZnJlZDpmcmVk -->
				<security:user name="fred" password="fred"
					authorities="ROLE_JOB_RUNNER" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
